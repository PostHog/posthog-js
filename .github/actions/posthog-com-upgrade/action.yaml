name: "Posthog.com auto upgrade"
description: "Create main repo PR with new posthog-js version"

inputs:
  package_name:
    description: "package name to upgrade"
    required: true
  package_version:
    description: "package version to upgrade to"
    required: true
  github_bot_token:
    description: "github bot token"
    required: true

runs:
  using: "composite"
  steps:
    - name: Check out main repo
      uses: actions/checkout@v2
      with:
        repository: "PostHog/posthog.com"
        token: ${{ inputs.github_bot_token }}

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: yarn

    - name: Install new posthog-js version in posthog.com repo
      shell: bash
      id: yarn-upgrade
      run: |
        OUTGOING_VERSION=$(jq '.dependencies["${{ inputs.package_name }}"]' package.json -r)
        echo "outgoing-version=$OUTGOING_VERSION" >> "$GITHUB_OUTPUT"
        for i in $(seq 1 $RETRY_TIMES); do
            # Retry loop because of npm being _eventually_ consistent
            if yarn upgrade ${{ inputs.package_name }}@${{ inputs.package_version }}; then
                break
            else
                [ $i -ne $RETRY_TIMES ] && sleep $RETRY_WAIT_SECONDS || false
            fi
        done
      env:
        RETRY_TIMES: 20
        RETRY_WAIT_SECONDS: 5

    - name: Create posthog.com repo pull request
      id: com-repo-pr
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ inputs.github_bot_token }}
        commit-message: "chore(deps): Update ${{ inputs.package_name }} to ${{ inputs.package_version }}"
        branch: ${{ replace(replace(inputs.package_name, '@', ''), '/', '-') }}-${{ inputs.package_version }}
        delete-branch: true
        labels: automerge
        title: "chore(deps): Update ${{ inputs.package_name }} to ${{ inputs.package_version }}"
        body: |
          ## Changes

          ${{ inputs.package_name }} version ${{ inputs.package_version }} has been released. This updates PostHog to use it.

          https://github.com/PostHog/posthog-js/compare/${{ inputs.package_name }}@${{ steps.yarn-upgrade.outputs.outgoing-version }}...${{ inputs.package_name }}@${{ inputs.package_version }} • [GitHub releases](https://github.com/PostHog/posthog-js/releases) • [npm releases](https://www.npmjs.com/package/${{ inputs.package_name }}?activeTab=version)

    - name: Output pull request result
      shell: bash
      run: |
        echo "PostHog pull request for ${{ inputs.package_name }} version ${{ inputs.package_version }} ready: ${{ steps.com-repo-pr.outputs.pull-request-url }}"
