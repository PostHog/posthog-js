name: TestCafe
on: [pull_request]
env:
  BROWSERSTACK_ACCESS_KEY: "${{ secrets.BROWSERSTACK_ACCESS_KEY }}"
  BROWSERSTACK_USERNAME: "${{ secrets.BROWSERSTACK_USERNAME }}"
  SECRET_KEY: 'abcdefghijklmnopqrst4' # unsafe - for testing only
  PG_DATABASE: 'test_posthog'
  REDIS_URL: 'redis://localhost'
  TEST: 'true'
  BROWSERSTACK_DEBUG: 'true'
  BROWSERSTACK_NETWORK_LOGS: 'true'
  BROWSERSTACK_CONSOLE: 'info'
  PLUGIN_SERVER_INGESTION: 'true'
  DISABLE_MMDB: 'true'

jobs:
  browsers:
    name: Test on Chrome, IE11, and Safari
    runs-on: ubuntu-latest

    steps:
      - name: Check out posthog-js
        uses: actions/checkout@v2

      - name: Check out Django server for database setup
        uses: actions/checkout@v2
        with:
            repository: 'PostHog/posthog'
            path: 'posthog/'
            ref: master

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
            python-version: 3.9.0

      - name: Set up Node 14
        uses: actions/setup-node@v2
        with:
            node-version: 16

      - name: Install SAML (python3-saml) dependencies
        shell: bash
        run: |
            sudo apt-get update
            sudo apt-get install libxml2-dev libxmlsec1-dev libxmlsec1-openssl

      - name: Install requirements.txt dependencies with pip
        run: python -m pip install --upgrade pip && python -m pip install -r posthog/requirements.txt && python -m pip install freezegun fakeredis pytest pytest-mock pytest-django

      - name: Add Kafka to /etc/hosts
        shell: bash
        run: echo "127.0.0.1 kafka" | sudo tee -a /etc/hosts

      - name: Stop/Start stack with Docker Compose
        run: |
            cd posthog
            docker-compose -f docker-compose.dev.yml down
            docker-compose -f docker-compose.dev.yml up -d

      - name: Wait for ClickHouse
        run: ./posthog/bin/check_kafka_clickhouse_up

      - name: Serve static files
        run: python -m http.server 8080 &

      - name: Set up posthog-js
        run: yarn; yarn build-array; mkdir -p posthog/frontend/dist; cp dist/array.js posthog/frontend/dist; python posthog/manage.py collectstatic --noinput

      - name: Start server
        run: |
          cd posthog
          ./bin/migrate
          python manage.py setup_dev --no-data
          ./bin/docker-worker &> worker_logs &
          ./bin/docker-server &> server_logs &

      - name: Run chrome test
        run: npx testcafe "browserstack:chrome" testcafe/*.spec.js

      - name: Run ie11 test
        run: npx testcafe "browserstack:ie" testcafe/*.spec.js

      - name: Run safari test
        run: npx testcafe "browserstack:safari" testcafe/*.spec.js

      - name: PostHog worker logs
        if: ${{ failure() }}
        run: cat posthog/worker_logs
      - name: PostHog server logs
        if: ${{ failure() }}
        run: cat posthog/server_logs
