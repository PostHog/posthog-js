'use strict'
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self['webpackHotUpdate_N_E']('pages/_app', {
    /***/ './src/posthogReplayReduxLogger.ts':
        /*!*****************************************!*\
  !*** ./src/posthogReplayReduxLogger.ts ***!
  \*****************************************/
        /***/ (module, __webpack_exports__, __webpack_require__) => {
            eval(
                __webpack_require__.ts(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   posthogReplayReduxLogger: () => (/* binding */ posthogReplayReduxLogger)\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_object_without_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @swc/helpers/_/_object_without_properties */ "../../../../node_modules/.pnpm/@swc+helpers@0.5.13/node_modules/@swc/helpers/esm/_object_without_properties.js");\n/* harmony import */ var _swc_helpers_to_consumable_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @swc/helpers/_/_to_consumable_array */ "../../../../node_modules/.pnpm/@swc+helpers@0.5.13/node_modules/@swc/helpers/esm/_to_consumable_array.js");\n/* harmony import */ var _swc_helpers_type_of__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @swc/helpers/_/_type_of */ "../../../../node_modules/.pnpm/@swc+helpers@0.5.13/node_modules/@swc/helpers/esm/_type_of.js");\n// Redux-compatible types without depending on Redux\n// Copied from https://github.com/reduxjs/redux/blob/6c8c3a10f6e5a35f0c4a61413d7a93a53e4f11d4/src/types/actions.ts#L32\n/**\n * An Action type which accepts any other properties.\n * This is mainly for the use of the `Reducer` type.\n * This is not part of `Action` itself to prevent types that extend `Action` from\n * having an index signature.\n */ \n\n\n/**\n * Default title function for Redux events\n */ function defaultTitleFunction(reduxEvent) {\n    var type = reduxEvent.type, executionTimeMs = reduxEvent.executionTimeMs;\n    var timeText = executionTimeMs !== undefined ? " (".concat(executionTimeMs.toFixed(2), "ms)") : \'\';\n    return "[PostHog Redux Logger] ".concat(type).concat(timeText);\n}\nfunction defaultLogger(title, reduxEvent) {\n    console.log(title, reduxEvent);\n}\n/**\n * Get only the changed keys from two states\n * Returns { prevState: changedKeysOnly, nextState: changedKeysOnly }\n */ function getChangedStateKeys(prevState, nextState) {\n    if (prevState === nextState) {\n        return {\n            prevState: {},\n            nextState: {}\n        };\n    }\n    if ((typeof prevState === "undefined" ? "undefined" : (0,_swc_helpers_type_of__WEBPACK_IMPORTED_MODULE_0__._)(prevState)) !== \'object\' || (typeof nextState === "undefined" ? "undefined" : (0,_swc_helpers_type_of__WEBPACK_IMPORTED_MODULE_0__._)(nextState)) !== \'object\' || prevState === null || nextState === null) {\n        return {\n            prevState: prevState,\n            nextState: nextState\n        };\n    }\n    if (Array.isArray(prevState) || Array.isArray(nextState)) {\n        return {\n            prevState: prevState,\n            nextState: nextState\n        };\n    }\n    var prevFiltered = {};\n    var nextFiltered = {};\n    var allKeys = new Set((0,_swc_helpers_to_consumable_array__WEBPACK_IMPORTED_MODULE_1__._)(Object.keys(prevState)).concat((0,_swc_helpers_to_consumable_array__WEBPACK_IMPORTED_MODULE_1__._)(Object.keys(nextState))));\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = allKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var key = _step.value;\n            var prevValue = prevState[key];\n            var nextValue = nextState[key];\n            if (!(key in prevState)) {\n                // Key was added\n                nextFiltered[key] = nextValue;\n            } else if (!(key in nextState)) {\n                // Key was removed\n                prevFiltered[key] = prevValue;\n            } else if (prevValue !== nextValue) {\n                // Key was changed\n                if ((typeof prevValue === "undefined" ? "undefined" : (0,_swc_helpers_type_of__WEBPACK_IMPORTED_MODULE_0__._)(prevValue)) === \'object\' && (typeof nextValue === "undefined" ? "undefined" : (0,_swc_helpers_type_of__WEBPACK_IMPORTED_MODULE_0__._)(nextValue)) === \'object\' && prevValue !== null && nextValue !== null && !Array.isArray(prevValue) && !Array.isArray(nextValue)) {\n                    // Recursively handle nested objects\n                    var nested = getChangedStateKeys(prevValue, nextValue);\n                    if (Object.keys(nested.prevState).length > 0 || Object.keys(nested.nextState).length > 0) {\n                        if (Object.keys(nested.prevState).length > 0) prevFiltered[key] = nested.prevState;\n                        if (Object.keys(nested.nextState).length > 0) nextFiltered[key] = nested.nextState;\n                    }\n                } else {\n                    // Primitive values or arrays - include both\n                    prevFiltered[key] = prevValue;\n                    nextFiltered[key] = nextValue;\n                }\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    return {\n        prevState: prevFiltered,\n        nextState: nextFiltered\n    };\n}\n/**\n * Creates a Redux middleware that logs actions and state changes for PostHog session replay\n * This can be used as middleware in any Redux store to capture state changes\n */ function posthogReplayReduxLogger() {\n    var config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    var _config_maskReduxAction = config.maskReduxAction, maskReduxAction = _config_maskReduxAction === void 0 ? function(action) {\n        return action;\n    } : _config_maskReduxAction, _config_maskReduxState = config.maskReduxState, maskReduxState = _config_maskReduxState === void 0 ? function(state) {\n        return state;\n    } : _config_maskReduxState, _config_titleFunction = config.titleFunction, titleFunction = _config_titleFunction === void 0 ? defaultTitleFunction : _config_titleFunction, _config_logger = config.logger, logger = _config_logger === void 0 ? defaultLogger : _config_logger, _config_diffState = config.diffState, diffState = _config_diffState === void 0 ? true : _config_diffState;\n    return function(store) {\n        return function(next) {\n            return function(action) {\n                // Get the state before the action\n                var prevState = store.getState();\n                // Track execution time\n                // eslint-disable-next-line compat/compat\n                var startTime = performance.now();\n                var result = next(action);\n                // eslint-disable-next-line compat/compat\n                var endTime = performance.now();\n                var executionTimeMs = endTime - startTime;\n                // Get the state after the action\n                var nextState = store.getState();\n                var maskedAction = maskReduxAction(action);\n                if (!maskedAction) {\n                    return result;\n                }\n                // Apply masking to states\n                var maskedPrevState = maskReduxState(prevState, maskedAction);\n                var maskedNextState = maskReduxState(nextState, maskedAction);\n                var filteredPrevState;\n                var filteredNextState;\n                if (diffState) {\n                    var _getChangedStateKeys = getChangedStateKeys(maskedPrevState, maskedNextState), diffedPrevState = _getChangedStateKeys.prevState, diffedNextState = _getChangedStateKeys.nextState;\n                    filteredPrevState = diffedPrevState;\n                    filteredNextState = diffedNextState;\n                } else {\n                    filteredPrevState = maskedPrevState;\n                    filteredNextState = maskedNextState;\n                }\n                // Extract type and the rest of the action properties\n                var type = maskedAction.type, actionData = (0,_swc_helpers_object_without_properties__WEBPACK_IMPORTED_MODULE_2__._)(maskedAction, [\n                    "type"\n                ]);\n                var reduxEvent = {\n                    type: type,\n                    payload: actionData,\n                    timestamp: Date.now(),\n                    executionTimeMs: executionTimeMs,\n                    prevState: filteredPrevState,\n                    nextState: filteredNextState\n                };\n                logger(titleFunction(reduxEvent), reduxEvent);\n                return result;\n            };\n        };\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we\'re in a\n        // browser context before continuing.\n        if (typeof self !== \'undefined\' &&\n            // AMP / No-JS mode does not inject these helpers:\n            \'$RefreshHelpers$\' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we\'ll check if it\'s\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we\'ll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it\'s possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/posthogReplayReduxLogger.ts\n'
                )
            )

            /***/
        },
})
